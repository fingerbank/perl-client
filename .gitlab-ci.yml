################################################################################
# COMMON PARAMETERS
################################################################################
before_script:
  - unset http_proxy ; unset https_proxy
  - env | grep ^CI_

################################################################################
# STAGES
################################################################################
stages:
 - download
 - build_pkg
 - sign
 - publish
 - test

################################################################################
# VARIABLES
################################################################################
variables:
  UPSTREAM_DB_URL: https://api.fingerbank.org/api/v2/download/db
  UPSTREAM_DB_FILE: db/fingerbank_Upstream.db
  # stored in a temp place
  UPSTREAM_VERSION_FILE: t/upstream_version.txt
  PACKAGE_NAME: fingerbank
  DEB_PACKAGES_NAME: "['fingerbank']"
  RPM_PACKAGES_NAME: "['fingerbank']"

################################################################################
# TEMPLATES
################################################################################
.build_job:
  stage: build_pkg
  dependencies:
    - download_upstream_db
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - docker

.debian_script:
  script:
    - tar c -zf ../$PACKAGE_NAME\_$(cat $UPSTREAM_VERSION_FILE).orig.tar.gz .
    # to include source tar in changes file used by reprepro
    - echo "DEBUILD_DPKG_BUILDPACKAGE_OPTS='-sa'" > ~/.devscripts
    - ci-build-pkg
    # copy source in result dir
    - cp ../$PACKAGE_NAME\_*.orig.tar.gz result/debian/stretch/

.rpm_script:
  script:
    - yum install epel-release -y
    - tar c -f upstream-db.tar $UPSTREAM_DB_FILE
    - ci-build-pkg


########################################
# JOBS
########################################
download_upstream_db:
  image: registry.gitlab.com/orange-opensource/gitlab-buildpkg/debian:buster
  stage: download
  # secret variable defined
  # API_KEY = fingerbank API KEY
  script:
    # get Upstream DB (not part of source)
    - curl --retry 3 --fail -X GET $UPSTREAM_DB_URL?key=$API_KEY --output $UPSTREAM_DB_FILE
    - apt-get install libreadonly-perl -y
    # get Upstream version from source code (workaround for https://gitlab.com/gitlab-org/gitlab-ce/issues/47517)
    - perl -I'lib/fingerbank' -M'Constant' -e 'print "$fingerbank::Constant::VERSION"' > $UPSTREAM_VERSION_FILE
  # pass artifact to build jobs
  artifacts:
    expire_in: 1 h
    paths:
      - $UPSTREAM_DB_FILE
      - $UPSTREAM_VERSION_FILE
  tags:
    - docker

build_pkg_debian_bullseye:
  image: registry.gitlab.com/orange-opensource/gitlab-buildpkg/debian:bullseye
  extends:
    - .build_job
    - .debian_script

build_pkg_centos_8:
  image: registry.gitlab.com/orange-opensource/gitlab-buildpkg/centos:8
  extends:
    - .build_job
    - .rpm_script

sign:
  # only use when executor is docker
  image: registry.gitlab.com/orange-opensource/gitlab-buildpkg/debian:buster
  stage: sign
  # use secret variables defined in GitLab UI
  script:
    - ci-sign-pkg
  dependencies:
    - build_pkg_debian_bullseye
    - build_pkg_centos_8
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - shell

pages:
  # only use when executor is docker
  image: registry.gitlab.com/orange-opensource/gitlab-buildpkg/debian:buster
  stage: publish
  variables:
    PAGES_DIR: public
  environment:
    name: PPA
    url: http://${CI_PROJECT_NAMESPACE}.gitlab.io/
  script:
    - ci-pages-ppa
    - ci-pages-home
    - ci-pages-tree
  dependencies:
    - sign
  artifacts:
    expire_in: 1 day
    paths:
      - public
  tags:
    - shell

test_debian_bullseye:
  stage: test
  script:
    - cd vagrant/ ; vagrant up fbdeb9dev --provider=libvirt --destroy-on-error
  after_script:
    - cd vagrant/ ; vagrant destroy -f fbdeb9dev
    - rm -rf .vagrant/ roles/
  dependencies: []
  tags:
    - shell

test_centos_7:
  stage: test
  script:
    - cd vagrant/ ; vagrant up fbcendev --provider=libvirt --destroy-on-error
  after_script:
    - cd vagrant/ ; vagrant destroy -f fbcendev
    - rm -rf .vagrant/ roles/
  dependencies: []
  tags:
    - shell
