### COMMON PARAMETERS
.build_job: &job_build
  stage: build
  dependencies:
    - download_upstream_db
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - docker

.debian_script: &deb_script
  script:
    - tar c -zf ../$PACKAGE_NAME\_$(cat $UPSTREAM_VERSION_FILE).orig.tar.gz .
    # to include source tar in changes file used by reprepro
    - echo "DEBUILD_DPKG_BUILDPACKAGE_OPTS='-sa'" > ~/.devscripts
    - ci-build-pkg
    # copy source in result dir
    - cp ../$PACKAGE_NAME\_*.orig.tar.gz result/debian/stretch/


.rhel_script: &rpm_script
  script:
    - yum install epel-release -y
    - tar c -f upstream-db.tar $UPSTREAM_DB_FILE
    - ci-build-pkg

### STAGES
stages:
 - download
 - build
 - sign
 - publish
 - install

### VARIABLES
variables:
  UPSTREAM_DB_URL: https://api.fingerbank.org/api/v2/download/db
  UPSTREAM_DB_FILE: db/fingerbank_Upstream.db
  # stored in a temp place
  UPSTREAM_VERSION_FILE: t/upstream_version.txt
  PACKAGE_NAME: fingerbank
  # env variables
  DEB_PACKAGES_NAME: "['fingerbank']"
  RPM_PACKAGES_NAME: "['fingerbank']"
  ANSIBLE_FORCE_COLOR: "true"

### JOBS
# for debug purpose
before_script:
  - unset http_proxy ; unset https_proxy
  - env | grep ^CI_

download_upstream_db:
  image: buildpkg/debian:stretch
  stage: download
  # secret variable defined
  # API_KEY = fingerbank API KEY
  script:
    # get Upstream DB (not part of source)
    - curl --retry 3 --fail -X GET $UPSTREAM_DB_URL?key=$API_KEY --output $UPSTREAM_DB_FILE
    - apt-get install libreadonly-perl -y
    # get Upstream version from source code (workaround for https://gitlab.com/gitlab-org/gitlab-ce/issues/47517)
    - perl -I'lib/fingerbank' -M'Constant' -e 'print "$fingerbank::Constant::VERSION"' > $UPSTREAM_VERSION_FILE
  # pass artifact to build jobs
  artifacts:
    expire_in: 1 h
    paths:
      - $UPSTREAM_DB_FILE
      - $UPSTREAM_VERSION_FILE
  tags:
    - docker

# we use YAML anchors to define same parameters for all builds
build_debian_stretch:
  image: buildpkg/debian:stretch
  <<: *job_build
  <<: *deb_script

build_centos_7:
  image: buildpkg/centos:7
  <<: *job_build
  <<: *rpm_script

sign:
  # only use when executor is docker
  image: buildpkg/debian:stretch
  stage: sign
#  secret variables defined:
#    SIGN_USER: firstname.lastname@example.com
#    GPG_PRIVATE_KEY: `gpg --armor --export-secret-keys firstname.lastname@example.com`
  script:
    - ci-sign-pkg
  dependencies:
    - build_debian_stretch
    - build_centos_7
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - shell

pages:
  # only use when executor is docker
  image: buildpkg/debian:stretch
  stage: publish
  variables:
    PAGES_DIR: public
    PAGES_HOST: gitlab.io
  environment:
    name: PPA
    url: http://${CI_PROJECT_NAMESPACE}.${PAGES_HOST}/${CI_PROJECT_NAME}
  script:
    - ci-pages-ppa
    - ci-pages-home
    - ci-pages-tree
  dependencies:
    - sign
  artifacts:
    expire_in: 1 day
    paths:
      - public
  tags:
    - shell

install_debian_stretch:
  stage: install
  script:
    - cd vagrant/ ; vagrant up fbdeb9dev --provider=libvirt --destroy-on-error
  after_script:
    - cd vagrant/ ; vagrant destroy -f fbdeb9dev
    - rm -rf .vagrant/ roles/
  dependencies: []
  tags:
    - shell

install_centos_7:
  stage: install
  script:
    - cd vagrant/ ; vagrant up fbcendev --provider=libvirt --destroy-on-error
  after_script:
    - cd vagrant/ ; vagrant destroy -f fbcendev
    - rm -rf .vagrant/ roles/
  dependencies: []
  tags:
    - shell
