################################################################################
# COMMON PARAMETERS
################################################################################
before_script:
  - unset http_proxy ; unset https_proxy
  - env | grep ^CI_

################################################################################
# STAGES
################################################################################
stages:
 - build_pkg
 - sign
 - publish
 - test
 - upload

################################################################################
# VARIABLES
################################################################################
variables:
  BUILDPKG_REGISTRY: registry.gitlab.com/orange-opensource/gitlab-buildpkg
  CENTOS_8_IMG: centos:8
  DEB_BULLSEYE_IMG: debian:bullseye
  DEB_BUSTER_IMG: debian:buster
  VAGRANT_DIR: vagrant
  CIDIR: ci
  CILIBDIR: ci/lib
  UPLOAD_DIR: $CILIBDIR/upload
  ANSIBLE_FORCE_COLOR: 1

################################################################################
# TEMPLATES
################################################################################
.build_job:
  stage: build_pkg
  dependencies: []
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - docker-inverse

.debian_script:
  script:
    - make -e build_deb

.rpm_script:
  script:
    - make -e build_rpm

.deploy_deb_job:
  stage: upload
  dependencies:
    - sign
  variables:
    DEPLOY_USER: reposync
    DEPLOY_HOST: web.inverse.ca
  script:
    - ./${UPLOAD_DIR}/deploy-artifacts.sh deb
  tags:
    - shell

.deploy_rpm_job:
  stage: upload
  dependencies:
    - sign
  variables:
    DEPLOY_USER: reposync
    DEPLOY_HOST: web.inverse.ca
    DEPLOY_SRPMS: "no"
  script:
    - ./${UPLOAD_DIR}/deploy-artifacts.sh rpm
  tags:
    - shell

################################################################################
# JOBS
################################################################################

########################################
#  BUILD_PKG JOBS
########################################
build_pkg_debian_bullseye:
  image: $BUILDPKG_REGISTRY/$DEB_BULLSEYE_IMG
  extends:
    - .build_job
    - .debian_script

build_pkg_centos_8:
  image: $BUILDPKG_REGISTRY/$CENTOS_8_IMG
  extends:
    - .build_job
    - .rpm_script

########################################
# SIGN JOBS
########################################
sign:
  # only use when executor is docker
  image: $BUILDPKG_REGISTRY/$DEB_BUSTER_IMG
  stage: sign
  # use secret variables defined in GitLab UI
  script:
    - ci-sign-pkg
  dependencies:
    - build_pkg_debian_bullseye
    - build_pkg_centos_8
  artifacts:
    expire_in: 1 day
    paths:
      - result/*
  tags:
    - shell


########################################
# PAGES JOBS
########################################
pages:
  # only use when executor is docker
  image: $BUILDPKG_REGISTRY/$DEB_BUSTER_IMG
  stage: publish
  variables:
    PAGES_DIR: public
  environment:
    name: PPA
    url: http://${CI_PROJECT_NAMESPACE}.gitlab.io/
  script:
    - ci-pages-ppa
    - ci-pages-home
    - ci-pages-tree
  dependencies:
    - sign
  artifacts:
    expire_in: 1 day
    paths:
      - public
  tags:
    - shell

########################################
# TEST JOBS
########################################
test_debian_bullseye:
  stage: test
  variables:
    VAGRANT_DOTFILE_PATH: /var/local/gitlab-runner/vagrant/vagrant-fb-debian-bullseye-dev
  script:
    - make -e -C $VAGRANT_DIR fbdeb11dev
  after_script:
    - make -e -C $VAGRANT_DIR halt-fbdeb11dev
  dependencies:
    - pages
  tags:
    - shell

test_el_8:
  stage: test
  variables:
    VAGRANT_DOTFILE_PATH: /var/local/gitlab-runner/vagrant/vagrant-fb-el-8-dev
  script:
    - make -e -C $VAGRANT_DIR fbel8dev
  after_script:
    - make -e -C $VAGRANT_DIR halt-fbel8dev
  dependencies:
    - pages
  tags:
    - shell

########################################
# UPLOAD JOBS
########################################
deploy_rpm_master:
  extends:
    - .deploy_rpm_job
  environment:
    name: devel
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

deploy_rpm_branches:
  extends:
    - .deploy_rpm_job
  environment:
    name: branches
  variables:
    RPM_DEPLOY_DIR: branches/x86_64
  rules:
   - if: '$CI_COMMIT_REF_NAME != "master"'

deploy_deb_master:
  extends:
    - .deploy_deb_job
  variables:
    DEB_DEPLOY_DIR: debian
  environment:
    name: devel
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

deploy_deb_branches:
  extends:
    - .deploy_deb_job
  environment:
    name: branches
  variables:
    DEB_DEPLOY_DIR: debian-branches
  rules:
   - if: '$CI_COMMIT_REF_NAME != "master"'
